<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:spring="http://www.springframework.org/schema/beans" xmlns:cxf="http://www.mulesoft.org/schema/mule/cxf"
	xmlns:smtps="http://www.mulesoft.org/schema/mule/smtps" xmlns:pop3="http://www.mulesoft.org/schema/mule/pop3"
	xmlns:smtp="http://www.mulesoft.org/schema/mule/smtp" xmlns:pop3s="http://www.mulesoft.org/schema/mule/pop3s"
	xmlns:imap="http://www.mulesoft.org/schema/mule/imap" xmlns:imaps="http://www.mulesoft.org/schema/mule/imaps"
	xmlns:email="http://www.mulesoft.org/schema/mule/email" xmlns:file="http://www.mulesoft.org/schema/mule/file"
	xmlns:https="http://www.mulesoft.org/schema/mule/https" xmlns:http="http://www.mulesoft.org/schema/mule/http"
	xmlns:jdbc="http://www.mulesoft.org/schema/mule/jdbc" xmlns:jms="http://www.mulesoft.org/schema/mule/jms"
	xmlns:json="http://www.mulesoft.org/schema/mule/json" xmlns:scripting="http://www.mulesoft.org/schema/mule/scripting"
	xmlns:management="http://www.mulesoft.org/schema/mule/management"
	xmlns:ognl="http://www.mulesoft.org/schema/mule/ognl" xmlns:quartz="http://www.mulesoft.org/schema/mule/quartz"
	xmlns:tcp="http://www.mulesoft.org/schema/mule/tcp" xmlns:vm="http://www.mulesoft.org/schema/mule/vm"
	xmlns:mule-xml="http://www.mulesoft.org/schema/mule/xml" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:mongo="http://www.mulesoft.org/schema/mule/mongo" xmlns:jersey="http://www.mulesoft.org/schema/mule/jersey"
	xsi:schemaLocation=" 
		  http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd	
          http://www.mulesoft.org/schema/mule/cxf http://www.mulesoft.org/schema/mule/cxf/current/mule-cxf.xsd
          http://www.mulesoft.org/schema/mule/smtps http://www.mulesoft.org/schema/mule/smtps/current/mule-smtps.xsd
          http://www.mulesoft.org/schema/mule/pop3 http://www.mulesoft.org/schema/mule/pop3/3.1/mule-pop3.xsd
          http://www.mulesoft.org/schema/mule/smtp http://www.mulesoft.org/schema/mule/smtp/3.3/mule-smtp.xsd
          http://www.mulesoft.org/schema/mule/pop3s http://www.mulesoft.org/schema/mule/pop3s/current/mule-pop3s.xsd
          http://www.mulesoft.org/schema/mule/imap http://www.mulesoft.org/schema/mule/imap/current/mule-imap.xsd
          http://www.mulesoft.org/schema/mule/imaps http://www.mulesoft.org/schema/mule/imaps/current/mule-imaps.xsd
          http://www.mulesoft.org/schema/mule/email http://www.mulesoft.org/schema/mule/email/3.2/mule-email.xsd
          http://www.mulesoft.org/schema/mule/file http://www.mulesoft.org/schema/mule/file/3.1/mule-file.xsd
          http://www.mulesoft.org/schema/mule/https http://www.mulesoft.org/schema/mule/https/current/mule-https.xsd
          http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
          http://www.mulesoft.org/schema/mule/jdbc http://www.mulesoft.org/schema/mule/jdbc/3.2/mule-jdbc.xsd
          http://www.mulesoft.org/schema/mule/jms http://www.mulesoft.org/schema/mule/jms/current/mule-jms.xsd
          http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd
          http://www.mulesoft.org/schema/mule/scripting http://www.mulesoft.org/schema/mule/scripting/3.3/mule-scripting.xsd
          http://www.mulesoft.org/schema/mule/management http://www.mulesoft.org/schema/mule/management/3.2/mule-management.xsd
          http://www.mulesoft.org/schema/mule/ognl http://www.mulesoft.org/schema/mule/ognl/current/mule-ognl.xsd
          http://www.mulesoft.org/schema/mule/quartz http://www.mulesoft.org/schema/mule/quartz/current/mule-quartz.xsd
          http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
          http://www.mulesoft.org/schema/mule/tcp http://www.mulesoft.org/schema/mule/tcp/current/mule-tcp.xsd
          http://www.mulesoft.org/schema/mule/vm http://www.mulesoft.org/schema/mule/vm/3.1/mule-vm.xsd
          http://www.mulesoft.org/schema/mule/xml http://www.mulesoft.org/schema/mule/xml/current/mule-xml.xsd
          http://www.mulesoft.org/schema/mule/mongo http://www.mulesoft.org/schema/mule/mongo/2.0/mule-mongo.xsd
          http://www.mulesoft.org/schema/mule/jersey http://www.mulesoft.org/schema/mule/jersey/current/mule-jersey.xsd">

	<flow name="receiveOpcData">
		<http:inbound-endpoint exchange-pattern="request-response"
			host="${rest.host}" port="${rest.port}" path="${rest.pathBase}/opcdata" />
		<jersey:resources doc:name="REST">
			<component class="com.pdvsa.psp.mule.rest.TransferOpcInfoRegisterRest" />
		</jersey:resources>
		<object-to-string-transformer />
		<mule-xml:xml-to-object-transformer
			returnClass="com.pdvsa.psp.model.xml.OpcItemsTransfer" encoding="UTF-8"
			mimeType="text/xml">
			<mule-xml:alias name="opcItemsTransfer"
				class="com.pdvsa.psp.model.xml.OpcItemsTransfer" />
			<mule-xml:alias name="opc"
				class="com.pdvsa.psp.model.xml.OpcInfoRegisterMongo" />
			<mule-xml:converter class="com.pdvsa.psp.converter.DateConverterMapper" />
		</mule-xml:xml-to-object-transformer>
		<all>
			<component>
				<spring-object bean="mongoInsertItemToTransferComponent" />
			</component>
			<component>
				<spring-object bean="storeInCache" />
			</component>
			<component>
				<spring-object bean="mongoSaveHistoricItemsComponent" />
			</component>
		</all>
		<scripting:transformer>
			<scripting:script engine="Groovy">
				<![CDATA[
         			import java.text.SimpleDateFormat;
         			import java.util.Date;
         			import java.text.DateFormat;
         			import java.util.Calendar;
         			import com.pdvsa.psp.model.xml.MongoLogger;
                  
      	 			//org.mule.api.routing.filter.FilterUnacceptedException
       				DateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
        			String dateStr = dateFormat.format(Calendar.getInstance().getTime());
                  
					Date currentTime = dateFormat.parse(dateStr);
                  
	        		def log = new MongoLogger();
        			log.tipoEvento = MongoLogger.Evento.EXITO; 
      				log.descripcion = "Se ha completado la transaccion de manera Exitosa";
      				log.fecha = currentTime;    
      
      				return log;
      			]]>
			</scripting:script>
		</scripting:transformer>
		<mule-xml:object-to-xml-transformer
			encoding="UTF-8" mimeType="text/xml">
			<mule-xml:alias name="response"
				class="com.pdvsa.psp.model.xml.MongoLogger" />
		</mule-xml:object-to-xml-transformer>
		<exception-strategy ref="Choice_Exception_Strategy" />
	</flow>

	<custom-transformer name="velocityNotificacionErrorTransmision"
		class="com.pdvsa.psp.mule.transformer.VelocityPayloadTransformer">
		<spring:property name="velocityEngine" ref="velocityEngine" />
		<spring:property name="templateName" value="errorTransmision.vm" />
	</custom-transformer>

	<flow name="validarTiempoInactividad">
		<quartz:inbound-endpoint jobName="jobvalidarTiempoInactividad"
			repeatInterval="${psp.transmitFrecuency}" repeatCount="-1"
			connector-ref="quartzConnector">
			<quartz:event-generator-job />
		</quartz:inbound-endpoint>
		<component>
			<spring-object bean="testTransmissionIdleTime" />
		</component>
		<expression-filter expression="payload.size() > 0"
			evaluator="groovy" />
<!-- 		<scripting:transformer> -->
<!-- 			<scripting:script engine="Groovy"> -->
<!-- 				<![CDATA[ -->
<!--          			def localidades = [] -->
<!--          			for(item in payload){ -->
<!--          				localidades = item.localidad -->
<!--          			}         			 -->
<!--          			payload = localidades -->
<!--          			return payload         			 -->
<!--       			]]> -->
<!-- 			</scripting:script> -->
<!-- 		</scripting:transformer> -->
<!-- 		<set-payload value="${smtp.body} - #[payload]" /> -->
		<enricher source="#[payload]" target="#[flowVars['addresses']]">
			<flow-ref name="obtenerDireccionCorreoSubflow" />
		</enricher>

		<smtp:outbound-endpoint host="${smtp.host}"
			port="${smtp.port}" user="${smtp.username}" password="${smtp.password}"
			subject="${email.subjectPrefix} N O T I F I C A C I O N" from="${email.fromAddress}"
			to="#[flowVars['addresses']]" transformer-refs="velocityNotificacionErrorTransmision"
			responseTimeout="10000" connector-ref="emailConnector">
		</smtp:outbound-endpoint>

	</flow>

	<sub-flow name="obtenerDireccionCorreoSubflow">
		<set-payload value="ADMIN" />
		<http:outbound-endpoint exchange-pattern="request-response"
			method="POST" address="${soap.urlBase}/rol">
			<cxf:jaxws-client operation="getEmailAdressesByRole"
				serviceClass="com.pdvsa.psp.service.IRolService" />
		</http:outbound-endpoint>
	</sub-flow>

</mule>
