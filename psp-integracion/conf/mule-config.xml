<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:spring="http://www.springframework.org/schema/beans"
	xmlns:quartz="http://www.mulesoft.org/schema/mule/quartz"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:xm="http://www.mulesoft.org/schema/mule/xml"
	xmlns:script="http://www.mulesoft.org/schema/mule/scripting" xmlns:rss="http://www.mulesoft.org/schema/mule/rss"
	xmlns:stdio="http://www.mulesoft.org/schema/mule/stdio" xmlns:vm="http://www.mulesoft.org/schema/mule/vm"
	xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:json="http://www.mulesoft.org/schema/mule/json"
	xmlns:jms="http://www.mulesoft.org/schema/mule/jms" xmlns:file="http://www.mulesoft.org/schema/mule/file"
	xmlns:tcp="http://www.mulesoft.org/schema/mule/tcp" xmlns:jdbc="http://www.mulesoft.org/schema/mule/jdbc"
	xmlns:management="http://www.mulesoft.org/schema/mule/management"
	xmlns:smtp="http://www.mulesoft.org/schema/mule/smtp" xmlns:smtps="http://www.mulesoft.org/schema/mule/smtps"
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:mongo="http://www.mulesoft.org/schema/mule/mongo" xmlns:jersey="http://www.mulesoft.org/schema/mule/jersey"
	xmlns:mule-xml="http://www.mulesoft.org/schema/mule/xml"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
       http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/3.3/mule.xsd
	   http://www.mulesoft.org/schema/mule/stdio http://www.mulesoft.org/schema/mule/stdio/3.3/mule-stdio.xsd     
	   http://www.mulesoft.org/schema/mule/rss http://www.mulesoft.org/schema/mule/rss/3.3/mule-rss.xsd   
	   http://www.mulesoft.org/schema/mule/vm http://www.mulesoft.org/schema/mule/vm/3.3/mule-vm.xsd     
	   http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/3.3/mule-http.xsd
	   http://www.mulesoft.org/schema/mule/scripting http://www.mulesoft.org/schema/mule/scripting/3.3/mule-scripting.xsd
       http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/3.3/mule-json.xsd	
       http://www.mulesoft.org/schema/mule/jms http://www.mulesoft.org/schema/mule/jms/3.3/mule-jms.xsd
       http://www.mulesoft.org/schema/mule/file http://www.mulesoft.org/schema/mule/file/3.3/mule-file.xsd
       http://www.mulesoft.org/schema/mule/jdbc http://www.mulesoft.org/schema/mule/jdbc/3.3/mule-jdbc.xsd
       http://www.mulesoft.org/schema/mule/quartz http://www.mulesoft.org/schema/mule/quartz/3.3/mule-quartz.xsd
       http://www.mulesoft.org/schema/mule/xml http://www.mulesoft.org/schema/mule/xml/3.3/mule-xml.xsd
       http://www.mulesoft.org/schema/mule/tcp http://www.mulesoft.org/schema/mule/tcp/3.3/mule-tcp.xsd
       http://www.mulesoft.org/schema/mule/management http://www.mulesoft.org/schema/mule/management/3.3/mule-management.xsd
       http://www.mulesoft.org/schema/mule/smtp http://www.mulesoft.org/schema/mule/smtp/3.3/mule-smtp.xsd
       http://www.mulesoft.org/schema/mule/smtps http://www.mulesoft.org/schema/mule/smtps/3.3/mule-smtps.xsd
       http://www.mulesoft.org/schema/mule/mongo http://www.mulesoft.org/schema/mule/mongo/2.0/mule-mongo.xsd
       http://www.mulesoft.org/schema/mule/jersey http://www.mulesoft.org/schema/mule/jersey/current/mule-jersey.xsd
       http://www.mulesoft.org/schema/mule/xml http://www.mulesoft.org/schema/mule/xml/current/mule-xml.xsd">

	<spring:beans>
		<spring:import resource="classpath:spring/spring-base.xml" />
		<spring:import resource="classpath:spring/spring-opc.xml" />
		<spring:import resource="classpath:psp-dataservices-config.xml" />			
	</spring:beans>

	<!-- NUEVO -->

	<quartz:connector name="Quartz-Connector"
		validateConnections="true" doc:name="Quartz">
		<quartz:factory-property key="rg.quartz.scheduler.instanceName"
			value="MuleScheduler1" />
		<quartz:factory-property key="org.quartz.threadPool.class"
			value="org.quartz.simpl.SimpleThreadPool" />
		<quartz:factory-property key="org.quartz.threadPool.threadCount"
			value="3" />
		<quartz:factory-property key="org.quartz.scheduler.rmi.proxy"
			value="false" />
		<quartz:factory-property key="org.quartz.scheduler.rmi.export"
			value="false" />
		<quartz:factory-property key="org.quartz.jobStore.class"
			value="org.quartz.simpl.RAMJobStore" />
	</quartz:connector>

	<mongo:config name="Mongo_DB" host="localhost" doc:name="Mongo DB" 		
		username="admin" password="admin">
		<mongo:connection-pooling-profile exhaustedAction="WHEN_EXHAUSTED_GROW"/>
		<reconnect count="5" />
	</mongo:config>	

	<custom-transformer
		class="com.pdvsa.psp.mule.transformer.JSONArrayToOpcInfoArray" name="Java"
		doc:name="Java" />

	<custom-transformer
		class="com.pdvsa.psp.mule.component.OpcInfoPollingService" name="OpcData">
		<spring:property name="opcControllerService" ref="opcControllerService"></spring:property>
	</custom-transformer>

	<custom-transformer
		class="com.pdvsa.psp.mule.transformer.ProcessOpcInfoTransformer" name="ProcessOpcData">
		<spring:property name="servidorService" ref="servidorService"></spring:property>
	</custom-transformer>	

	<!-- HASTA AQUI NUEVO -->


	<flow name="PingFlow">
		<http:inbound-endpoint host="localhost" port="8084"
			exchange-pattern="request-response" />
		<logger message="Ping - #[message:payload]" level="INFO" />
		<echo-component></echo-component>
	</flow>


	<!-- *********** M A N A G E M E N T *********** -->

	<management:jmx-default-config port="${esb.jmxrmi.port}">
		<management:credentials>
			<spring:entry key="${esb.admin.username}" value="${esb.admin.password}" />
		</management:credentials>
	</management:jmx-default-config>

	<management:jmx-mx4j-adaptor
		jmxAdaptorUrl="http://${esb.bind.address}:${esb.console.port}" login="${esb.admin.username}"
		password="${esb.admin.password}" />

	<!-- *********** C O N N E C T O R S *********** -->

	<smtp:gmail-connector name="emailConnector"
		fromAddress="${email.fromAddress}" />

	<http:connector name="httpConnector" proxyHostname="${proxy.hostname}"
		proxyPassword="${proxy.password}" proxyPort="${proxy.port}"
		proxyUsername="${proxy.username}" />

	<vm:connector name="vmQueues" />

	<!-- *********** E N D P O I N T S *********** -->

	<smtp:endpoint name="smtpNotification" user="${smtp.username}"
		password="${smtp.password}" host="${smtp.host}" port="${smtp.port}"
		connector-ref="emailConnector" subject="${email.subjectPrefix} N O T I F I C A C I O N" />




</mule>